#!/bin/bash
# use maven to set PROJECT_VERSION in the environment, call the promote cloud function and notify burgr
# Requires the environment variables:
# - BUILD_NUMBER: The build number provided by the CI
# - GCF_ACCESS_TOKEN: Bearer token for the google cloud function (promote function)
# - PROMOTE_URL: Url of the google cloud function (promote function)
# - GITHUB_REPO: The GitHub repository name
# - GITHUB_BRANCH: The GitHub branch name
# - PULL_REQUEST: The pull request number (i.e 239)
# shellcheck source=/dev/null

set -euo pipefail

source cirrus-env PROMOTE

if [[ ! -v BUILD_NUMBER ]]; then
    printf "BUILD_NUMBER is not set\n"
    exit 1
fi

if [[ ! -v GCF_ACCESS_TOKEN ]]; then
    printf "GCF_ACCESS_TOKEN is not set\n"
    exit 1
fi

if [[ ! -v PROMOTE_URL ]]; then
    printf "PROMOTE_URL is not set\n"
    exit 1
fi

if [[ ! -v GITHUB_REPO ]]; then
    printf "GITHUB_REPO is not set\n"
    exit 1
fi

if [[ ! -v GITHUB_BRANCH ]]; then
    printf "GITHUB_BRANCH is not set\n"
    exit 1
fi

if [[ ! -v PULL_REQUEST ]]; then
    printf "PULL_REQUEST is not set\n"
    exit 1
fi

source set_maven_build_version "$BUILD_NUMBER"
curl -sfSL -H "Authorization: Bearer $GCF_ACCESS_TOKEN" "$PROMOTE_URL/$GITHUB_REPO/$GITHUB_BRANCH/$BUILD_NUMBER/$PULL_REQUEST"

if [[ ! -v GITHUB_TOKEN ]]; then
    echo "GITHUB_TOKEN is not set (skip addition of github commit status with build number)"
else
    echo "GITHUB_TOKEN is provided, will add github commit status with build number"

    if [[ ! -v PROJECT ]]; then
        printf "PROJECT is not set\n"
        exit 1
    fi

    if [[ ! -v ARTIFACTORY_URL ]]; then
        printf "ARTIFACTORY_URL is not set\n"
        exit 1
    fi

    if [[ ! -v PROJECT_VERSION ]]; then
        printf "PROJECT_VERSION is not set\n"
        exit 1
    fi

    if [[ ! -v GIT_SHA1 ]]; then
        printf "GIT_SHA1 is not set\n"
        exit 1
    fi

    BUILD_URL="${ARTIFACTORY_URL}/webapp/#/builds/${PROJECT}/${BUILD_NUMBER}/"
    http_response=$(curl -s -o response.txt -w "%{http_code}" -X POST -H "Authorization: token $GITHUB_TOKEN" -H 'Content-Type: application/json' --data '{"state": "success", "target_url": "'"${BUILD_URL}"'", "description": "Latest promoted build: '"${PROJECT_VERSION}"'", "context": "repox"}' https://api.github.com/repos/"${GITHUB_REPO}"/statuses/"${GIT_SHA1}")
    if [ "$http_response" == "200" ]; then
        echo "done"
    else
        # handle error
        echo "Could not add github commit status for build number $BUILD_NUMBER."
        echo "Cause: GitHub API responded with $http_response:"
        cat response.txt

        if [ "$http_response" == "401" ]; then
            # bad credentials

            if [ "${CIRRUS_CI:-false}" == "true" ]; then
              # cirrus advice
              REPOSITORY_SHORTNAME=${CIRRUS_REPO_NAME:-"REPOSITORY_NAME"}
echo "

Tips:

1) Check the vault policy for this repository in

  https://github.com/SonarSource/re-terraform-aws-vault/tree/master/orders

  The vault policy of this repository should contains the following declarations:

  $REPOSITORY_SHORTNAME
    secrets:
      github:
        presets: [default]
        customs:
          - <<: *github_promotion
            repositories: [$REPOSITORY_SHORTNAME]

  and

  github_promotion: &github_promotion
    organization: SonarSource
    suffix: promotion
    description: add a github check containing the build version to the current commit (required by cirrus_promote_maven)
    permissions: {statuses: write}

2) Check the .cirrus.yml file:

  The token should be declared this way:

  GITHUB_TOKEN: VAULT[development/github/token/\${CIRRUS_REPO_OWNER}-\${CIRRUS_REPO_NAME}-promotion token]
"
            fi
        fi

        exit 1
    fi
fi

#burgr notification
burgr-notify-promotion
