env:
  CIRRUS_CLONE_DEPTH: 20
  ARTIFACTORY_PRIVATE_USERNAME: vault-sonarsource-license-headers-private-reader
  ARTIFACTORY_DEPLOY_USERNAME: vault-sonarsource-license-headers-qa-deployer
  #Possible values for ARTIFACTORY_DEPLOY_REPO: sonarsource-private-qa, sonarsource-public-qa
  ARTIFACTORY_DEPLOY_REPO: sonarsource-public-qa  
container_definition: &CONTAINER_DEFINITION
  image: ${CIRRUS_AWS_ACCOUNT}.dkr.ecr.eu-central-1.amazonaws.com/base:j11-latest
  cluster_name: ${CIRRUS_CLUSTER_NAME}
  region: eu-central-1
  namespace: default

only_sonarsource_qa: &ONLY_SONARSOURCE_QA
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == "" && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*")

vault: &VAULT
  vault_script:
    - vault.sh

build_task:
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 2
    memory: 2G
  env:
    SONAR_HOST_URL: https://next.sonarqube.com/sonarqube
    #allow deployment of pull request artifacts to repox
    DEPLOY_PULL_REQUEST: true
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  <<: *VAULT
  build_script:
    - source cirrus-env BUILD
    - source set_maven_build_version $BUILD_NUMBER
    - mvn deploy -Pdeploy-sonarsource,release -B -e -V
  cleanup_before_cache_script: cleanup_maven_repository

 
promote_task:
  depends_on:
    - build
  <<: *ONLY_SONARSOURCE_QA
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 0.5
    memory: 500M
  env:
    #artifacts that will have downloadable links in burgr
    ARTIFACTS: org.sonarsource.license-headers:license-headers:jar
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  <<: *VAULT
  script: cirrus_promote_maven
  cleanup_before_cache_script: cleanup_maven_repository
